# Option:  failregex
# Notes.:  regex to match the password failures messages in the logfile. The
#          host must be matched by a group named "host". The tag "<HOST>" can
#          be used for standard IP/hostname matching and is only an alias for
#          (?:::f{4,6}:)?(?P<HOST>[\w\-.^_]+)
# Values:  TEXT
#
failregex = httpd: [^ :]*:<HOST6> - - .* "POST ([^"]*)?/+wp-login\.php HTTP/1.[01]" (200|403|302|404|500|301|503) ([0-9]+|-)
failregex = httpd: [^ :]*:<HOST6> - - .* "POST ([^"]+)?/+wp-comments-post\.php HTTP/1.[01]"
failregex = httpd: [^ :]*:<HOST6> - - .* "POST ([^"]*)?/+wp-login\.php\?registration=disabled HTTP/1.[01]" (200) [0-9]+
failregex = httpd: [^ :]*:<HOST6> - - .* "POST ([^"]*)?/+wp-login\.php\?registration=register HTTP/1.[01]" (200) [0-9]+
failregex = httpd: [^ :]*:<HOST6> - - .* "GET ([^"]*)?/wp-admin/setup-config\.php HTTP/1.[01]" 404
# Failed logins, note this may pick up on real admin activity as well but shouldnt be this exact (referer should be set in those cases)
failregex = httpd: [^ :]*:<HOST6> - - .* "POST /administrator/index.php HTTP/1.1" [0-9]* [0-9]* "-"

# Really.... way to go there
failregex = httpd: [^ :]*:<HOST6> - - .* "\[% tools.ua.random() %\]"

# Every match is counted, so repeating this 5 times means 1 hit = 5 attempts
failregex = httpd: [^ :]*:<HOST6> - - .* "POST ([^"]*)?/+xmlrpc\.php HTTP/1.[01]" (200|404|500|301|302|503) ([0-9]+|-)
failregex = httpd: [^ :]*:<HOST6> - - .* "POST ([^"]*)?/+xmlrpc\.php HTTP/1.[01]" (200|404|500|301|302|503) ([0-9]+|-)
failregex = httpd: [^ :]*:<HOST6> - - .* "POST ([^"]*)?/+xmlrpc\.php HTTP/1.[01]" (200|404|500|301|302|503) ([0-9]+|-)
failregex = httpd: [^ :]*:<HOST6> - - .* "POST ([^"]*)?/+xmlrpc\.php HTTP/1.[01]" (200|404|500|301|302|503) ([0-9]+|-)
failregex = httpd: [^ :]*:<HOST6> - - .* "POST ([^"]*)?/+xmlrpc\.php HTTP/1.[01]" (200|404|500|301|302|503) ([0-9]+|-)



# Option:   ipregex
# Notes:    regex to use to determine the IP from a line before doing any may matches
#           On a match each failregex is then checked. Using a generic ipregex should
#            result in less processing time.
#           Eg: 1,000 lines * 20 ipregex means 20,000 regexes to run. Only 1% maybe
#             released to failregex
ipregex = httpd: [^ :]*:<HOST6> - - .* "(POST|GET) 
